*
{
    font-weight: 600;
    --general: #f2f3f4;
    --second: #dddddd;
    --bits: #a6a3a1;
    --other: #6c5e62;
}
::-webkit-scrollbar 
{
    width: 4px;
    background: var(--second);
    border-radius: 2px;
}
::-webkit-scrollbar-thumb 
{
    background-color: var(--other);
    border-radius: 2px;
}
input
{
    border-radius: .4rem;
    padding: 2px;
    outline: #4683b4;
    border: 2px solid var(--bits);  
}
textarea
{
    border-radius: .4rem;
    outline: #4683b4;
    border: 2px solid var(--bits);  
}
.flexCenter
{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    background: linear-gradient(#f2f2f2, #c9c9c9);
}
.generalGrid
{
    display: grid;
    width: 60%;
}
.emptyCell
{
    background: rgba(173, 100, 237, 0.197);
    border: 1px solid rgb(182, 100, 237); 
    z-index: 20; 
}
.emptyCell:hover
{
    background: rgba(100, 148, 237, 0.334);
}
.bottomTools
{
    position: fixed;
    bottom: 0;
    height: 10%;
    width: 80%;
    right: 10%;
    border-radius: .4rem .4rem 0 0;
    background: var(--general);
    display: flex;
    justify-content: space-around;
    align-items: center;
    box-shadow: 0 0 10px 3px #A9A9A9;
}
.rightPanel
{
    position: fixed;
    right: 0;
    width: 10%;
    height: 28%;
    top: 36%;
    border-radius: .4rem 0 0 .4rem;
    background:var(--general);
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    box-shadow: 0 0 10px 3px #A9A9A9;
}
.rightButtons
{
    width: 80%;
    padding: 5px;
}
.rightButtons:disabled
{
    opacity: 30%;
    color: var(--bits);
}
.colorButton
{
    min-width: 100px;
    padding: 5px;
}
.colorButton:disabled
{
    opacity: 30%;
    color: var(--bits);
}
.clearButton
{
    position: fixed;
    top:0;
    left:0;
}
.ghost
{
    opacity: 50%;
    background: #5F9EA0;
}
.unit
{
    border-radius: .4rem;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 200;
    text-align: center;
    flex-direction: column;
    color:  #15374D;
    overflow: hidden;
}
input
{
    max-width: 50px;
}
button
{
    border: 1px solid var(--bits);
    padding: 5px;
    margin: 3px;
    background: var(--second)/*#4683b47b  box-shadow: 1px 1px 0px 0px var(--bits);*/;
    border-radius: .5rem;
    box-shadow: 2px 2px 0px 0px var(--bits);
    color: var(--other);
}
button:hover
{
    box-shadow: 1px 1px 0px 0px var(--bits);
    background: var(--other);
    color: white;
}
button:active
{
    background: var(--bits);
}
.popUpBack
{
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #00000034;
    z-index: 450;
    display: flex;
    align-items: center;
    justify-content: center;
}
.popup
{
    background: /*linear-gradient(white, rgb(183, 183, 183))*/var(--general);
    min-width: 30%;
    min-height: 10%;
    padding: 11px;
    border-radius: .4rem;
    z-index: 450;
    display: flex;
    align-items: center;
    justify-content: center;
    animation: popUpAnimation 150ms;
}
.insideImg
{
    max-width: 90%;
    max-height: 66%;
}
.insideP
{
    margin-top: 3px;
    margin-bottom: 0;
    color: inherit;
    padding-left: 7px;
    padding-right: 7px;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    max-width: 80%;
}
.mainDiv
{
    width: 80vw;
    height: 80vh;
    overflow-y: scroll;
}
.insideMainDivFlex
{
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
}
.draggableElement
{
    width: 70vw;
    height: 10vh;
    border-radius: .4rem;
    border: 1px solid gray;
    background: var(--second);
    margin: 6px;
    display: flex;
    justify-content: space-around;
    align-items: center;
    box-shadow: 2px 2px 0px 0px var(--bits);
}
.infos
{
    width: 80%;
    max-width: 80%;
}
.saveButton
{
    position: fixed;
    bottom: 11px;
    right: 11px;
}
.saveBlock
{
    position: fixed;
    top: 5px;
    right: 5px;
}
.loadListButton
{
    position: fixed;
    top: 8px;
    right: 8px;
}
@keyframes popUpAnimation {
    from
    {
        transform: scale(0.1, 0.1);
    }
    to
    {
        transform: scale(1, 1);
    }  
}